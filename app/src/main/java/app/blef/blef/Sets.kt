package app.blef.blef

val sets = listOf(
    "High card, 9",
    "High card, 10",
    "High card, J",
    "High card, Q",
    "High card, K",
    "High card, A",
    "Pair of 9s",
    "Pair of 10s",
    "Pair of Js",
    "Pair of Qs",
    "Pair of Ks",
    "Pair of As",
    "Two pair, 10s and 9s",
    "Two pair, Js and 9s",
    "Two pair, Js and 10s",
    "Two pair, Qs and 9s",
    "Two pair, Qs and 10s",
    "Two pair, Qs and Js",
    "Two pair, Ks and 9s",
    "Two pair, Ks and 10s",
    "Two pair, Ks and Js",
    "Two pair, Ks and Qs",
    "Two pair, As and 9s",
    "Two pair, As and 10s",
    "Two pair, As and Js",
    "Two pair, As and Qs",
    "Two pair, As and Ks",
    "Small straight (9-K)",
    "Big straight (10-A)",
    "Great straight (9-A)",
    "Three of a kind, 9s",
    "Three of a kind, 10s",
    "Three of a kind, Js",
    "Three of a kind, Qs",
    "Three of a kind, Ks",
    "Three of a kind, As",
    "Full house, 9s over 10s",
    "Full house, 9s over Js",
    "Full house, 9s over Qs",
    "Full house, 9s over Ks",
    "Full house, 9s over As",
    "Full house, 10s over 9s",
    "Full house, 10s over Js",
    "Full house, 10s over Qs",
    "Full house, 10s over Ks",
    "Full house, 10s over As",
    "Full house, Js over 9s",
    "Full house, Js over 10s",
    "Full house, Js over Qs",
    "Full house, Js over Ks",
    "Full house, Js over As",
    "Full house, Qs over 9s",
    "Full house, Qs over 10s",
    "Full house, Qs over Js",
    "Full house, Qs over Ks",
    "Full house, Qs over As",
    "Full house, Ks over 9s",
    "Full house, Ks over 10s",
    "Full house, Ks over Js",
    "Full house, Ks over Qs",
    "Full house, Ks over As",
    "Full house, As over 9s",
    "Full house, As over 10s",
    "Full house, As over Js",
    "Full house, As over Qs",
    "Full house, As over Ks",
    "Flush ♣",
    "Flush ♦",
    "Flush ♥",
    "Flush ♠",
    "Four of a kind, 9s",
    "Four of a kind, 10s",
    "Four of a kind, Js",
    "Four of a kind, Qs",
    "Four of a kind, Ks",
    "Four of a kind, As",
    "Small straight flush (9-K) ♣",
    "Small straight flush (9-K) ♦",
    "Small straight flush (9-K) ♥",
    "Small straight flush (9-K) ♠",
    "Big straight flush (10-A) ♣",
    "Big straight flush (10-A) ♦",
    "Big straight flush (10-A) ♥",
    "Big straight flush (10-A) ♠",
    "Great straight flush (9-A) ♣",
    "Great straight flush (9-A) ♦",
    "Great straight flush (9-A) ♥",
    "Great straight flush (9-A) ♠"
)

val setContributors = listOf(
    // High card
    listOf("00", "01", "02", "03"),
    listOf("10", "11", "12", "13"),
    listOf("20", "21", "22", "23"),
    listOf("30", "31", "32", "33"),
    listOf("40", "41", "42", "43"),
    listOf("50", "51", "52", "53"),
    // Pair
    listOf("00", "01", "02", "03"),
    listOf("10", "11", "12", "13"),
    listOf("20", "21", "22", "23"),
    listOf("30", "31", "32", "33"),
    listOf("40", "41", "42", "43"),
    listOf("50", "51", "52", "53"),
    // Two pair
    listOf("00", "01", "02", "03", "10", "11", "12", "13"),
    listOf("00", "01", "02", "03", "20", "21", "22", "23"),
    listOf("10", "11", "12", "13", "20", "21", "22", "23"),
    listOf("00", "01", "02", "03", "30", "31", "32", "33"),
    listOf("10", "11", "12", "13", "30", "31", "32", "33"),
    listOf("20", "21", "22", "23", "30", "31", "32", "33"),
    listOf("00", "01", "02", "03", "40", "41", "42", "43"),
    listOf("10", "11", "12", "13", "40", "41", "42", "43"),
    listOf("20", "21", "22", "23", "40", "41", "42", "43"),
    listOf("30", "31", "32", "33", "40", "41", "42", "43"),
    listOf("00", "01", "02", "03", "50", "51", "52", "53"),
    listOf("10", "11", "12", "13", "50", "51", "52", "53"),
    listOf("20", "21", "22", "23", "50", "51", "52", "53"),
    listOf("30", "31", "32", "33", "50", "51", "52", "53"),
    listOf("40", "41", "42", "43", "50", "51", "52", "53"),
    // Straight
    listOf("00", "01", "02", "03", "10", "11", "12", "13", "20", "21", "22", "23", "30", "31", "32", "33", "40", "41", "42", "43"),
    listOf("10", "11", "12", "13", "20", "21", "22", "23", "30", "31", "32", "33", "40", "41", "42", "43", "50", "51", "52", "53"),
    listOf("00", "01", "02", "03", "10", "11", "12", "13", "20", "21", "22", "23", "30", "31", "32", "33", "40", "41", "42", "43", "50", "51", "52", "53"),
    //Three of a kind
    listOf("00", "01", "02", "03"),
    listOf("10", "11", "12", "13"),
    listOf("20", "21", "22", "23"),
    listOf("30", "31", "32", "33"),
    listOf("40", "41", "42", "43"),
    listOf("50", "51", "52", "53"),
    // Full house
    listOf("00", "01", "02", "03", "10", "11", "12", "13"),
    listOf("00", "01", "02", "03", "20", "21", "22", "23"),
    listOf("00", "01", "02", "03", "30", "31", "32", "33"),
    listOf("00", "01", "02", "03", "40", "41", "42", "43"),
    listOf("00", "01", "02", "03", "50", "51", "52", "53"),
    listOf("00", "01", "02", "03", "10", "11", "12", "13"),
    listOf("10", "11", "12", "13", "20", "21", "22", "23"),
    listOf("10", "11", "12", "13", "30", "31", "32", "33"),
    listOf("10", "11", "12", "13", "40", "41", "42", "43"),
    listOf("10", "11", "12", "13", "50", "51", "52", "53"),
    listOf("00", "01", "02", "03", "20", "21", "22", "23"),
    listOf("10", "11", "12", "13", "20", "21", "22", "23"),
    listOf("20", "21", "22", "23", "30", "31", "32", "33"),
    listOf("20", "21", "22", "23", "40", "41", "42", "43"),
    listOf("20", "21", "22", "23", "50", "51", "52", "53"),
    listOf("00", "01", "02", "03", "30", "31", "32", "33"),
    listOf("10", "11", "12", "13", "30", "31", "32", "33"),
    listOf("20", "21", "22", "23", "30", "31", "32", "33"),
    listOf("30", "31", "32", "33", "40", "41", "42", "43"),
    listOf("30", "31", "32", "33", "50", "51", "52", "53"),
    listOf("00", "01", "02", "03", "40", "41", "42", "43"),
    listOf("10", "11", "12", "13", "40", "41", "42", "43"),
    listOf("20", "21", "22", "23", "40", "41", "42", "43"),
    listOf("30", "31", "32", "33", "40", "41", "42", "43"),
    listOf("40", "41", "42", "43", "50", "51", "52", "53"),
    listOf("00", "01", "02", "03", "50", "51", "52", "53"),
    listOf("10", "11", "12", "13", "50", "51", "52", "53"),
    listOf("20", "21", "22", "23", "50", "51", "52", "53"),
    listOf("30", "31", "32", "33", "50", "51", "52", "53"),
    listOf("40", "41", "42", "43", "50", "51", "52", "53"),
    // Flush
    listOf("00", "10", "20", "30", "40", "50"),
    listOf("01", "11", "21", "31", "41", "51"),
    listOf("02", "12", "22", "32", "42", "52"),
    listOf("03", "13", "23", "33", "43", "53"),
    // Four of a kind
    listOf("00", "01", "02", "03"),
    listOf("10", "11", "12", "13"),
    listOf("20", "21", "22", "23"),
    listOf("30", "31", "32", "33"),
    listOf("40", "41", "42", "43"),
    listOf("50", "51", "52", "53"),
    // Great straight flush
    listOf("00", "10", "20", "30", "40"),
    listOf("01", "11", "21", "31", "41"),
    listOf("02", "12", "22", "32", "42"),
    listOf("03", "13", "23", "33", "43"),
    listOf("10", "20", "30", "40", "50"),
    listOf("11", "21", "31", "41", "51"),
    listOf("12", "22", "32", "42", "52"),
    listOf("13", "23", "33", "43", "53"),
    listOf("00", "10", "20", "30", "40", "50"),
    listOf("01", "11", "21", "31", "41", "51"),
    listOf("02", "12", "22", "32", "42", "52"),
    listOf("03", "13", "23", "33", "43", "53")
)

fun checkIfContributes(value: Int, suit: Int, set: Int): Boolean {
    return(setContributors[set].contains("$value$suit"))
}
